#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

- name: Prepare variable
  hosts: localhost:all
  become: false
  tasks:
    - set_fact:
        lavinMqVersion: 1.3.1
    - set_fact:
    #todo update this
        lavinmq_bin_file: ./rabbitmq-server-{{ rabbitMqVersion }}-1.el7.noarch.rpm

- name: Download rpm file
  hosts: localhost
  become: false
  tasks:
    - name: check if lavinmq file exists
      stat:
        path: "{{ lavinmq_bin_file }}"
      register: lavinmq_bin_file_stat

- name: Add entries to /etc/hosts
  hosts: all
  connection: ssh
  tasks:
    - lineinfile:
        dest: /etc/hosts
        line: "{{ item.line }}"
        state: present
      with_items:
        - { line: "{{ hostvars[groups['lavinmq'][0]].private_ip }} lavinmq" }


- name: Install LavinMQ Cluster
  hosts: lavinmq
  connection: ssh
  tasks:
  - set_fact:
  - name: Install RPM packages
    yum:
      name:
        - wget
        - java
        - sysstat
        - vim
        - socat
      state: latest
  - name: Upload lavinmq
    copy:
      src: "{{ lavinmq_bin_file }}"
      dest: /tmp/{{ lavinmq_bin_file }}
  - name: Install Lavinmq
    yum:
      name: /tmp/{{ lavinmq_bin_file }}
      state: present

  - systemd:
      state: started
      daemon_reload: yes
      name: "lavinmq"
  - name: create admin/admin  profile
    shell:  lavinmqctl add_user admin  admin
  - name: set admin tag
    shell: lavinmqctl set_user_tags admin administrator
  - name: set admin permission
    shell: lavinmqctl set_permissions -p "/" admin ".*" ".*" ".*"
  - name: Show queue list
    shell: lavinmqctl list_queues
    register: result_queue
  - debug: msg='{{result_queue.stdout}}'


- name: Lavinmq benchmarking client setup
  hosts: client
  connection: ssh
  become: true
  tasks:
    - name: Install RPM packages
      yum:
        name:
          - java
          - sysstat
          - vim
        state: latest
    - name: Copy benchmark code
      unarchive:
        src: ../../../package/target/openmessaging-benchmark-0.0.1-SNAPSHOT-bin.tar.gz
        dest: /opt
    - shell: >
        tuned-adm profile latency-performance &&
        mv /opt/openmessaging-benchmark-0.0.1-SNAPSHOT /opt/benchmark
    - name: Configure service URL
      lineinfile:
        dest: /opt/benchmark/driver-lavinmq/lavinmq-classic.yaml
        regexp: '^brokerAddress\: '
        line: 'brokerAddress: lavinmq'
    - template:
        src: "../templates/workers.yaml"
        dest: "/opt/benchmark/workers.yaml"
    - name: Configure memory
      lineinfile:
         dest: /opt/benchmark/bin/benchmark-worker
         regexp: '^JVM_MEM='
         line: 'JVM_MEM="-Xms6G -Xmx6G -XX:+UseG1GC -XX:MaxGCPauseMillis=10 -XX:+ParallelRefProcEnabled -XX:+UnlockExperimentalVMOptions -XX:+AggressiveOpts -XX:+DoEscapeAnalysis -XX:ParallelGCThreads=32 -XX:ConcGCThreads=32 -XX:G1NewSizePercent=50 -XX:+DisableExplicitGC -XX:-ResizePLAB -XX:+PerfDisableSharedMem -XX:+AlwaysPreTouch -XX:-UseBiasedLocking"'
    - name: Configure memory
      lineinfile:
         dest: /opt/benchmark/bin/benchmark
         regexp: '^JVM_MEM='
         line: 'JVM_MEM="-Xmx4G"'
    - name: Install benchmark systemd service
      template:
        src: "../templates/benchmark-worker.service"
        dest: "/etc/systemd/system/benchmark-worker.service"
    - systemd:
        state: restarted
        daemon_reload: yes
        name: "benchmark-worker"
    - name: wait worker
      wait_for:
        host: '*'
        port: 8080
        state: started
        timeout: 300


- name: List host addresses
  hosts: localhost
  become: false
  tasks:
    - debug:
        msg: "LavinMQ node {{ item }}"
      with_items: "{{ groups['lavinmq'] }}"
    - debug:
        msg: "Benchmark client {{ item }}"
      with_items: "{{ groups['client'] }}"

